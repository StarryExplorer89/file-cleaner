name: Build PyInstaller

on:
  pull_request:
    branches:
      - main

jobs:
  build_ubuntu:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: |
          pyinstaller --windowed --additional-hooks-dir=. --icon=assets/app_icon.ico -F file_cleaner_gui.py
        shell: bash

      - name: Rename output file
        run: |
          mv dist/file_cleaner_gui dist/File_Cleaner.exe

      - name: Upload .exe artifact
        uses: actions/upload-artifact@v3
        with:
          name: File_Cleaner_Windows
          path: dist/File_Cleaner.exe

  build_macos:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: |
          pyinstaller --windowed --additional-hooks-dir=. --icon=assets/app_icon.ico -F file_cleaner_gui.py
        shell: bash

      - name: Rename output file
        run: |
          mv dist/file_cleaner_gui dist/File_Cleaner.app

      - name: Compress .app file
        run: |
          cd dist && zip -r File_Cleaner.zip File_Cleaner.app

      - name: Upload .app artifact
        uses: actions/upload-artifact@v3
        with:
          name: File_Cleaner_macOS
          path: dist/File_Cleaner.zip

  create_release:
    runs-on: ubuntu-latest
    needs: [build_ubuntu, build_macos]

    steps:
      - name: Download .exe artifact
        uses: actions/download-artifact@v3
        with:
          name: File_Cleaner_Windows
          path: ./dist

      - name: Download .app artifact
        uses: actions/download-artifact@v3
        with:
          name: File_Cleaner_macOS
          path: ./dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.2
          release_name: File Cleaner v1.2
          draft: false
          prerelease: false

      - name: Upload .exe artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/File_Cleaner.exe
          asset_name: File_Cleaner.exe
          asset_content_type: application/octet-stream

      - name: Upload .zip artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/File_Cleaner.zip
          asset_name: File_Cleaner.zip
          asset_content_type: application/zip
